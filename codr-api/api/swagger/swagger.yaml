swagger: "2.0"
info:
  version: "0.0.1"
  title: Users demo
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  - http
  - https
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
paths:
  /right_groups:
    x-swagger-router-controller: right_groups
    get:
      description: Returns a list of all right_groups.
      operationId: getRightGroups
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RightGroup"
        "500":
          description: Internal server error
    post:
      description: Creates a new right_groups.
      operationId: postRightGroup
      parameters:
        - name: body
          in: body
          description: Description of the new right's group.
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/RightGroup"
        "401":
          description: Not allowed
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /right_groups/{right_group_id}:
    x-swagger-router-controller: right_groups
    put:
      description: Updates the specified rights group.
      operationId: putRightGroupById
      parameters:
        - name: right_group_id
          in: path
          description: ID of rights group
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Description of the new right's group.
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
      responses:
        "200":
          description: Right group updated
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified rights group.
      operationId: deleteRightGroupById
      parameters:
        - name: right_group_id
          in: path
          description: ID of the right group to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: Item deleted
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /templates:
    x-swagger-router-controller: templates
    get:
      description: Returns a list of all rights templates.
      operationId: getTemplates
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TemplateList"
        "500":
          description: Internal server error
    post:
      description: Creates a new template.
      operationId: postTemplate
      parameters:
        - name: body
          in: body
          description: Rights for the template
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        "201":
          description: Success, new template has been created.
        "401":
          description: Error, user is not allowed to access this page.
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /templates/{template_id}:
    x-swagger-router-controller: templates
    put:
      description: Updates the specified template.
      operationId: putTemplateById
      parameters:
        - name: template_id
          in: path
          description: ID of template
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: body of the request
          schema:
            $ref: '#/definitions/Rights'
      responses:
        "200":
          description: Group rights updated
        "201":
          description: new group rights created
        "401":
          description: Not allowed
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified rights template.
      operationId: deleteTemplateById
      parameters:
        - name: template_id
          in: path
          description: ID of the template to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: Item deleted
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /users:
    x-swagger-router-controller: users
    get:
      description: Returns a list of all user accounts.
      operationId: getUsers
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserList"
        "401":
          description: Not allowed
        "500":
          description: Internal server error
  /users/current:
    x-swagger-router-controller: users
    get:
      description: Returns information for the currently logged in user.
      operationId: getCurrentUser
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CurrentUser"
        "401":
          description: Not allowed
  /users/current/comments:
    x-swagger-router-controller: comments
    get:
      description: Return all comments that the current user can see.
      operationId: getComments
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/CommentResponseList'
        "401":
          description: Not allowed
  /users/{user_id}:
    x-swagger-router-controller: users
    get:
      description: Returns the details of the specified user account.
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          description: ID of customer to fetch account for
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CurrentUser"
        "401":
          description: Not allowed
        "404":
          description: User_Id not found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified user account.
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          description: ID of customer to fetch account for
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: Item deleted
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
    put:
      description: Updates the specified user account.
      operationId: putUserById
      parameters:
        - name: user_id
          in: path
          description: ID of customer to fetch account for
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: body of the request
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /users/{user_id}/comments:
    x-swagger-router-controller: users
    get:
      description: Returns all comments for the specified user.
      operationId: getUserCommentsById
      parameters:
        - name: user_id
          in: path
          description: ID of customer to fetch account for
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserCommentResponseList"
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /groups:
    x-swagger-router-controller: groups
    get:
      description: Returns a list of all groups.
      operationId: getGroups
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GroupList"
        "401":
          description: Error, user is not allowed to access this page.
        "500":
          description: Internal server error
    post:
      description: Creates a new group.
      operationId: postGroup
      parameters:
        - name: body
          in: body
          description: ID of the module for which the group should be created.
          required: false
          schema:
            type: object
            properties:
              module_id:
                type: integer
                format: int64
      responses:
        "201":
          description: Success, new group has been created.
          schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        "401":
          description: Error, user is not allowed to access this page.
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /groups/{group_id}:
    x-swagger-router-controller: groups
    get:
      description: Returns the details of the specified group.
      operationId: getGroupById
      parameters:
        - name: group_id
          in: path
          description: ID of the group to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Group"
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, group could not be found.
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified group.
      operationId: deleteGroupById
      parameters:
        - name: group_id
          in: path
          description: ID of the group to delete.
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: Success.
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, group could not be found.
        "500":
          description: Internal server error
    put:
      description: Updates the specified group.
      operationId: putGroupById
      parameters:
        - in: body
          name: body
          description: Data for the group to update.
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
        - name: group_id
          in: path
          description: ID of the group to update.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Group"
        "400":
          description: Error, invalid input.
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, group could not be found.
        "500":
          description: Internal server error
  /modules:
    x-swagger-router-controller: modules
    get:
      description: Returns a list of all modules.
      operationId: getModules
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ModuleList"
        "500":
          description: Internal server error
    post:
      description: Creates a new module.
      operationId: postModule
      parameters:
        - in: body
          name: body
          description: JSON representation of the module to create.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
      responses:
        "201":
          description: Success, new module has been created.
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              description:
                type: string
        "401":
          description: Error, user is not allowed to access this page.
        "405":
          description: Error, invalid input.
        "500":
          description: Internal server error
  /modules/{module_id}:
    x-swagger-router-controller: modules
    get:
      description: Returns the details of the specified module.
      operationId: getModuleById
      parameters:
        - name: module_id
          in: path
          description: ID of the module to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ModuleResponse"
        "404":
          description: Error, module could not be found.
          
    delete:
      description: Deletes the specified module.
      operationId: deleteModuleById
      parameters:
        - name: module_id
          in: path
          description: ID of the module to delete.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success.
        "401":
          description: Not allowed.
        "404":
          description: Error, module could not be found.
        "500":
          description: Internal server error
    put:
      description: Updates the specified module.
      operationId: putModuleById
      parameters:
        - in: body
          name: body
          description: Data for the module to update.
          schema:
            $ref: "#/definitions/ModuleUpdate"
        - name: module_id
          in: path
          description: ID of the module to update.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ModuleResponse"
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module could not be found.
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /modules/{module_id}/group:
    x-swagger-router-controller: modules
    get:
      description: Returns the groups for this module for the current user.
      operationId: getCurrentUserGroups
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch groups.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                group_id:
                  type: integer
                  format: int64
                users:
                  type: array
                  items:
                    $ref: '#/definitions/User'
        "500":
          description: Internal server error
  /modules/{module_id}/courses:
    x-swagger-router-controller: courses
    get:
      description: Returns the courses of the specified module.
      operationId: getCoursesByModuleId
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
                  type: object
                  required:
                    - name
                    - description
                  properties:
                    id:
                      type: integer
                      format: int64
                    module_id:
                      type: integer
                      format: int64
                    name:
                      type: string
                    description:
                      type: string
                    can_edit:
                      type: boolean
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module could not be found.
        "500":
          description: Internal server error
    post:
      description: Creates a new course for the given module.
      operationId: postCourseByModuleId
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: JSON representation of the course to create.
          required: true
          schema:
            $ref: "#/definitions/CourseUpdate"
      responses:
        "201":
          description: Success, new course has been created.
          schema:
            $ref: "#/definitions/CourseResponse"
        "401":
          description: Error, user is not allowed to access this page.
        "405":
          description: Error, invalid input
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}:
    x-swagger-router-controller: courses
    get:
      description: Returns the specified course for the specified module.
      operationId: getCourseById
      parameters:
        - name: module_id
          in: path
          description: ID of the module to fetch.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CourseResponseGet"
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified course from the specified module.
      operationId: deleteCourseById
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to delete a course.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to delete.
          required: true
          type: integer
          format: int64          
      responses:
        "200":
          description: Success.
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course could not be found.
        "500":
          description: Internal server error
    put:
      description: Updates the specified course for the specified module.
      operationId: putCourseById
      parameters:
        - name: body
          in: body
          description: Data for the course to update.
          required: true
          schema:
            $ref: "#/definitions/CourseUpdate"
        - name: module_id
          in: path
          description: ID of the module from which to update a course.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64  
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CourseResponse"
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course could not be found.
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises:
    x-swagger-router-controller: exercises
    get:
      description: Returns a list of exercises for the specified course for the specified module.
      operationId: getExercises
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              required:
                - rights_template_id
                - name
                - description
              properties:
                id:
                  type: integer
                  format: int64
                course_id:
                  type: integer
                  format: int64
                rights_template_id:
                  type: integer
                  format: int64
                name:
                  type: string
                description:
                  type: string
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course could not be found.
        "500":
          description: Internal server error
    post:
      description: Adds a new exercise to the specified course.
      operationId: postExercise
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: JSON representation of the Exercise to create.
          required: true
          schema:
            type: object
            required:
              - name
              - description
              - rights_template_id
            properties:
              rights_template_id:
                type: integer
                format: int64
              name:
                type: string
              description:
                type: string
      responses:
        "201":
          description: Success, new course has been created.
          schema:
            type: object
            required:
              - id
              - course_id
              - name
              - description
              - rights_template_id
            properties:
              id:
                type: integer
                format: int64
              course_id:
                type: integer
                format: int64
              rights_template_id:
                type: integer
                format: int64
              name:
                type: string
              description:
                type: string
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course could not be found.
        "405":
          description: Error, invalid input.        
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}:
    x-swagger-router-controller: exercises
    get:
      description: Returns the specified exercise.
      operationId: getExerciseById
      parameters:
        - name: module_id
          in: path
          description: ID of the module to fetch.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: object
            required:
              - rights_template_id
              - name
              - description
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              description:
                type: string
              rights_template_id:
                type: integer
                format: int64
              can_edit:
                type: boolean
              projects:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  exercise_id:
                    type: integer
                    format: int64
                  author_id:
                    type: integer
                    format: int64
                  projectgroup_id:
                    type: integer
                    format: int64
                  can_delete:
                    type: boolean
                  projectgroup:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                      module_id:
                        type: integer
                        format: int64
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                            display_name:
                              type: string
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise could not be found.
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified exercise.
      operationId: deleteExerciseById
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to delete a course.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64         
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success.
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise could not be found.
        "500":
          description: Internal server error
    put:
      description: Updates the specified exercise.
      operationId: putExerciseById
      parameters:
        - in: body
          name: body
          description: Data for the Exercise to update.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              rights_template_id:
                type: integer
                format: int64
        - name: module_id
          in: path
          description: ID of the module from which to update a course.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              name:
                type: string
              description:
                type: string
              rights_template_id:
                type: integer
                format: int64
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise could not be found
        "405":
          description: Incorrect input
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}/projects:
    x-swagger-router-controller: projects
    get:
      description: Returns all projects for an exercise
      operationId: getProjects
      parameters:
        - name: module_id
          in: path
          description: ID of the module to fetch.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                exercise_id:
                  type: integer
                  format: int64
                author_id:
                  type: integer
                  format: int64
                projectgroup_id:
                  type: integer
                  format: int64
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise or project could not be found.
        "500":
          description: Internal server error
    post:
      description: Adds a new Project to the specified exercise.
      operationId: postProject
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: JSON representation of the Project to create.
          required: true
          schema:
            type: object
            properties:
              projectgroup_id:
                type: integer
                format: int64
      responses:
        "201":
          description: Success, new course has been created.
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              exercise_id:
                type: integer
                format: int64
              author_id:
                type: integer
                format: int64
              projectgroup_id:
                type: integer
                format: int64
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course could not be found.
        "405":
          description: Error, invalid input.        
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}/projects/{project_id}:
    x-swagger-router-controller: projects
    get:
      description: Returns the specified project.
      operationId: getProjectById
      parameters:
        - name: module_id
          in: path
          description: ID of the module to fetch.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              exercise_id:
                type: integer
                format: int64
              author_id:
                type: integer
                format: int64
              can_view:
                type: boolean
              can_edit:
                type: boolean
              can_create_comment:
                type: boolean
              can_create_visible_comment:
                type: boolean
              can_delete:
                type: boolean
              project_groups:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    users:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                          display_name:
                            type: string
              files:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    path:
                      type: string
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise or project could not be found.
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified project.
      operationId: deleteProjectById
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to delete a course.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64         
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success.
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise or project could not be found.
        "500":
          description: Internal server error
    put:
      description: Updates the specified project.
      operationId: putProjectById
      parameters:
        - in: body
          name: body
          description: Data for the project to update.
          required: true
          schema:
            type: object
            properties:
              projectgroup_id:
                type: integer
                format: int64
        - name: module_id
          in: path
          description: ID of the module from which to update a course.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course to fetch.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              exercise_id:
                type: integer
                format: int64
              author_id:
                type: integer
                format: int64
              projectgroup_id:
                type: integer
                format: int64
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Error, module or course or exercise or project could not be found
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}/projects/{project_id}/files:
    x-swagger-router-controller: files
    post:
      description: Saves a file to the database.
      consumes:   
        - multipart/form-data
      operationId: postFile
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
        - name: files
          in: formData
          description: files to post
          required: false
          type: file
      responses:
        "200":
          description: Success
        "401":
          description: Not allowed
        "405":
          description: Invalid input
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}/projects/{project_id}/files/{file_id}:
    x-swagger-router-controller: files
    get:
      description: Returns the file with the specified id.
      operationId: getFileById
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
        - name: file_id
          in: path
          description: ID of file to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              project_id:
                type: integer
                format: int64
              path:
                type: string
              content:
                type: array
                items:
                  type: string
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}/projects/{project_id}/files/{file_id}/comments:
    x-swagger-router-controller: comments
    post:
      description: Creates a comment
      operationId: postComment
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
        - name: file_id
          in: path
          description: ID of file to fetch comments for
          required: true
          type: integer
          format: int64
        - name: comment
          in: body
          required: true
          schema:
            type: object
            properties:
              parent_id: 
                type: integer
                format: int64
              line_range:
                type: string
              content:
                type: string
      responses:
        "201":
          description: Success, new comment has been created.
        "401":
          description: Error, user is not allowed to access this page.
        "404":
          description: Not found.
        "405":
          description: Error, invalid input.
        "500":
          description: Internal server error
  /modules/{module_id}/courses/{course_id}/exercises/{exercise_id}/projects/{project_id}/files/{file_id}/comments/{comment_id}:
    x-swagger-router-controller: comments
    put:
      description: Updates the specified comment.
      operationId: putCommentById
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
        - name: file_id
          in: path
          description: ID of file to fetch comments for
          required: true
          type: integer
          format: int64
        - name: comment_id
          in: path
          description: ID of comment
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: body of the request
          schema:
            type: object
            properties:
              content:
                type: string
              visible:
                type: boolean
      responses:
        "200":
          description: Success
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "500":
          description: Internal server error
    delete:
      description: Deletes the specified comment.
      operationId: deleteCommentById
      parameters:
        - name: module_id
          in: path
          description: ID of the module from which to fetch courses.
          required: true
          type: integer
          format: int64
        - name: course_id
          in: path
          description: ID of the course from which to fetch exercises.
          required: true
          type: integer
          format: int64
        - name: exercise_id
          in: path
          description: ID of the exercise to fetch.
          required: true
          type: integer
          format: int64
        - name: project_id
          in: path
          description: ID of the project to fetch.
          required: true
          type: integer
          format: int64
        - name: file_id
          in: path
          description: ID of file to fetch comments for
          required: true
          type: integer
          format: int64
        - name: comment_id
          in: path
          description: ID of comment
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: Item deleted
        "401":
          description: Not allowed
        "404":
          description: Id not found
        "500":
          description: Internal server error
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      display_name:
        type: string
  CurrentUser:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user_level:
        type: integer
        format: int64
      display_name:
        type: string
  UserList:
      type: array
      items:
        $ref: '#/definitions/User'
  CommentResponseHead:
    type: object
    properties:
      id:
        type: integer
        format: int64
      parent_id:
        type: integer
        format: int64
      file_id:
        type: integer
        format: int64
      project_id:
        type: integer
        format: int64
      exercise_id:
        type: integer
        format: int64
      course_id:
        type: integer
        format: int64
      module_id:
        type: integer
        format: int64
      line_range:
        type: string
      content:
        type: string
      author_id:
        type: integer
        format: int64
      author_name:
        type: string
      visible:
        type: boolean
      timestamp:
        type: integer
        format: int64
      deleted:
        type: boolean
      can_edit:
        type: boolean
      can_delete:
        type: boolean
      can_toggle_visibility:
        type: boolean
      children:
        type: array
        items:
          $ref: '#/definitions/CommentResponseTail'
  CommentResponseTail:
    type: object
    properties:
      id:
        type: integer
        format: int64
      parent_id:
        type: integer
        format: int64
      file_id:
        type: integer
        format: int64
      project_id:
        type: integer
        format: int64
      exercise_id:
        type: integer
        format: int64
      course_id:
        type: integer
        format: int64
      module_id:
        type: integer
        format: int64
      line_range:
        type: string
      content:
        type: string
      author_id:
        type: integer
        format: int64
      author_name:
        type: string
      visible:
        type: boolean
      timestamp:
        type: integer
        format: int64
      deleted:
        type: boolean
      can_edit:
        type: boolean
      can_delete:
        type: boolean
      can_toggle_visibility:
        type: boolean
      children:
        type: array
        items:
          type: object
  CommentResponseList:
      type: array
      items:
        $ref: '#/definitions/CommentResponseHead'
  UserCommentResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      parent_id:
        type: integer
        format: int64
      file_id:
        type: integer
        format: int64
      project_id:
        type: integer
        format: int64
      exercise_id:
        type: integer
        format: int64
      course_id:
        type: integer
        format: int64
      module_id:
        type: integer
        format: int64
      line_range:
        type: string
      content:
        type: string
      author_id:
        type: integer
        format: int64
      visible:
        type: boolean
      timestamp:
        type: integer
        format: int64
      deleted:
        type: boolean
      can_edit:
        type: boolean
      can_delete:
        type: boolean
      can_toggle_visibility:
        type: boolean
  UserCommentResponseList:
      type: array
      items:
        $ref: '#/definitions/UserCommentResponse'
  Group:
    type: object
    properties:
      id:
        type: integer
        format: int64
      module_id:
        type: integer
        format: int64
      Users:
        type: array
        items: 
          $ref: '#/definitions/User'
  GroupList:
      type: array
      items:
        $ref: '#/definitions/Group'
  ModuleUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      users:
        type: array
        items:
          type: object
          properties:
            user_id:
              type: integer
              format: int64
            group_id:
              type: integer
              format: int64
  Module:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      can_view:
        type: boolean
      can_edit:
        type: boolean
  ModuleResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      can_edit:
        type: boolean
      courses:
        type: array
        items:
          $ref: '#/definitions/ModuleCourse'
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'
  ModuleList:
      type: object
      properties:
        can_edit:
          type: boolean
        modules:
          type: array
          items:
            $ref: '#/definitions/Module'
  CourseUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  CourseResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
  ModuleCourse:
    type: object
    required:
      - name
      - description
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string  
  CourseResponseGet:
    type: object
    required:
      - name
      - description
      - can_edit
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      can_edit:
        type: boolean
      exercises:
        type: array
        items:
          $ref: '#/definitions/Exercise'
  Exercise:
    type: object
    required:
      - rights_template_id
      - name
      - description
    properties:
      id:
        type: integer
        format: int64
      rights_template_id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
  Project:
    type: object
    required:
      - projectgroup_id
    properties:
      id:
        type: integer
        format: int64
      projectgroup_id:
        type: integer
        format: int64
      files:
        type: array
        items:
          $ref: '#/definitions/File'
  TemplateList:
    type: array
    items:
      $ref: '#/definitions/Template'
  Template:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      rights:
        type: array
        items:
          $ref: '#/definitions/Rights'
  Rights:
    type: object
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
      project_rights:
        type: object
        properties:
          member:
            type: object
            required:
              - can_view
              - can_edit
              - can_create_comment
              - can_create_visible_comment
              - can_delete
            properties:
              can_view:
                type: boolean
              can_edit:
                type: boolean
              can_create_comment:
                type: boolean
              can_create_visible_comment:
                type: boolean
              can_delete:
                type: boolean
          other:
            type: object
            required:
              - can_view
              - can_edit
              - can_create_comment
              - can_create_visible_comment
              - can_delete
            properties:
              can_view:
                type: boolean
              can_edit:
                type: boolean
              can_create_comment:
                type: boolean
              can_create_visible_comment:
                type: boolean
              can_delete:
                type: boolean
      comment_rights:
        type: object
        properties:
          owner:
            type: object
            required:
              - can_view
              - can_edit
              - can_delete
              - can_toggle_visibility
            properties:
              can_view:
                type: boolean
              can_edit:
                type: boolean
              can_delete:
                type: boolean
              can_toggle_visibility:
                type: boolean
          member:
            type: object
            required:
              - can_view
              - can_edit
              - can_delete
              - can_toggle_visibility
            properties:
              can_view:
                type: boolean
              can_edit:
                type: boolean
              can_delete:
                type: boolean
              can_toggle_visibility:
                type: boolean
          other:
            type: object
            required:
              - can_view
              - can_edit
              - can_delete
              - can_toggle_visibility
            properties:
              can_view:
                type: boolean
              can_edit:
                type: boolean
              can_delete:
                type: boolean
              can_toggle_visibility:
                type: boolean
  File:
    type: object
    required:
      - id
      - path
      - content
      - comments
    properties:
      id:
        type: integer
        format: int64
      path:
        type: string
      content:
        type: array
        items:
          $ref: '#/definitions/Line'
      comments:
        type: array
        items:
          $ref: '#/definitions/CommentResponseHead'
  RightGroup:
    type: object
    required:
      - id
      - description
    properties:
      id:
        type: integer
        format: int64
      description:
        type: string
  Line:
    type: string
  ErrorResponse:
    type: object
    properties:
      message:
        type: string
